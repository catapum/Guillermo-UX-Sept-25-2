<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <description>Determines whether isProcessServiceCatalogRequestFailed from the ProcessRMDRequestAndNotifyAccount step of the ProcessRMDRequestAndNotifyStakeholders stage is set to True.</description>
        <name>HasRMDRequestFailed</name>
        <label>Has Required Minimum Distribution Request Failed?</label>
        <locationX>336</locationX>
        <locationY>1169</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsFailed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>ProcessRMDRequestAndNotifyAccount.Outputs.isProcessServiceCatalogRequestFailed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NotifyCaseOwnerOfFailure</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the bank agent has rejected the document.</description>
        <name>IsDocumentRejected</name>
        <label>Is Document Rejected?</label>
        <locationX>182</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>ProcessRMDRequestAndNotifyStakeholders</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No(Default)</defaultConnectorLabel>
        <rules>
            <name>DocumentRejected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ReviewGetDocumentChecklistItemsAndVerification.Outputs.RejectedDocumentStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ProcessRMDSetupForRejectedDocuments</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if the selectedOption variable is set to True, indicating that the new EFT payment option has been selected and verifying whether the asynchronous Apex action callout succeeded.</description>
        <name>IsNewEFTSelected</name>
        <label>Is New EFT Selected?</label>
        <locationX>336</locationX>
        <locationY>395</locationY>
        <defaultConnector>
            <targetReference>ProcessRMDRequestAndNotifyStakeholders</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>EFTPaymentOptionSelected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotifyAccountOfRMDRequest.Outputs.selectedOption</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New EFT Account</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ProcessGetDocumentChecklistItemsAndVerification</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if the &apos;isRetryConnection&apos; variable in the NotifyCaseOwnerOfFailedRequest is set to True, indicating that the user has chosen to retry the ProcessRMDRequestAndNotifyStakeholders stage.</description>
        <name>IsRetrySelected</name>
        <label>Is Retry Selected?</label>
        <locationX>138</locationX>
        <locationY>1385</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>RetrySelected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotifyCaseOwnerOfFailedRequest.Outputs.isRetryConnection</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>ProcessRMDRequestAndNotifyStakeholders</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Notifies the account that a Required Minimum Distribution request was made and attempts to process it. If the attempt is successful, it closes the associated case and notifies the account. If the attempt fails, notifies the case owner.</description>
    <environments>Default</environments>
    <interviewLabel>FSC Wealth: Setup Required Minimum Distribution Service Request {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Process Wealth Setup Required Minimum Distribution</label>
    <orchestratedStages>
        <description>Notifies the case owner that the required minimum distribution request failed.</description>
        <name>NotifyCaseOwnerOfFailure</name>
        <label>Notify Case Owner of Failure</label>
        <locationX>138</locationX>
        <locationY>1277</locationY>
        <connector>
            <targetReference>IsRetrySelected</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Assigns a work item to the service catalog request record owner that displays a retry screen, notifying them that the required minimum distribution request failed.</description>
            <name>NotifyCaseOwnerOfFailedRequest</name>
            <actionName>serviceprocess__AsyncApexCalloutSts</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>status</name>
                <value>
                    <elementReference>ProcessRMDRequestAndNotifyAccount.Outputs.failureMessage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <label>Notify Case Owner of Failed Request</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Notifies the account associated with the triggering service catalog request that the Required Minimum Distribution request has been made for the account. If the process requires notifying other stakeholders, add additional steps to notify them at this stage.</description>
        <name>NotifyStakeholdersOfRequest</name>
        <label>Notify Stakeholders of Request</label>
        <locationX>336</locationX>
        <locationY>287</locationY>
        <connector>
            <targetReference>IsNewEFTSelected</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Emails the person associated with the account of the triggering service catalog request record when the required minimum distribution request has been made for the account and when the associated email can be determined.</description>
            <name>NotifyAccountOfRMDRequest</name>
            <actionName>serviceprocess__WealthRvwRqrMinDstr</actionName>
            <actionType>stepBackground</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>inputRecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Notify Account of Required Minimum Distribution Request</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>true</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Attempts to process all Document Checklist Item records with a &quot;New&quot; status, passes them to other flows, and allows the case owner to review the document for a required minimum distribution request.</description>
        <name>ProcessGetDocumentChecklistItemsAndVerification</name>
        <label>Process Document Checklist and Verification</label>
        <locationX>182</locationX>
        <locationY>503</locationY>
        <connector>
            <targetReference>IsDocumentRejected</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Attempts to process all Document Checklist Item records for the required minimum distribution request, allowing the case owner to review and verify the document before proceeding.</description>
            <name>ReviewGetDocumentChecklistItemsAndVerification</name>
            <actionName>serviceprocess__WealthRvwRMDDocSts</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>accountId</name>
                <value>
                    <elementReference>$Record.Case.AccountId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>bankName</name>
                <value>
                    <elementReference>NotifyAccountOfRMDRequest.Outputs.bankName</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>caseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>financialAccountNumber</name>
                <value>
                    <elementReference>NotifyAccountOfRMDRequest.Outputs.bankAccountNumber</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>routingNumber</name>
                <value>
                    <elementReference>NotifyAccountOfRMDRequest.Outputs.bankRoutingNumber</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <label>Review Document Checklist and Verification</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Attempts to process the required minimum distribution request, close the case, and notify the account associated with the triggering service catalog request. If your process requires notifying other stakeholders about the success or status change of the case, add additional steps to notify them in this stage.</description>
        <name>ProcessRMDRequestAndNotifyStakeholders</name>
        <label>Process Required Minimum Distribution Request and Notify Stakeholders</label>
        <locationX>336</locationX>
        <locationY>1061</locationY>
        <connector>
            <targetReference>HasRMDRequestFailed</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Processes the required minimum distribution request. If the request is successful, it closes the associated case. If an email is available and the case is closed, it emails the customer to notify them that their request has been processed and the case is closed. If the required minimum distribution request fails, returns True for isProcessServiceCatalogRequestFailed and an error message for failureMessage.</description>
            <name>ProcessRMDRequestAndNotifyAccount</name>
            <actionName>serviceprocess__UpdateCase</actionName>
            <actionType>stepBackground</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>accountEmail</name>
                <value>
                    <elementReference>NotifyAccountOfRMDRequest.Outputs.accountEmail</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>caseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>emailSubjectCaseClosed</name>
                <value>
                    <stringValue>Your service request to Setup Required Minimum Distribution was closed</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>integrationDefinitionDevName</name>
                <value>
                    <stringValue>FSCWlth_SetupRequiredMinimumDistribution</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Process Required Minimum Distribution Request and Notify Account</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>true</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Processes the setup of the required minimum distribution request after a document rejection, allowing the flow user to resubmit the rejected documents.</description>
        <name>ProcessRMDSetupForRejectedDocuments</name>
        <label>Process Required Minimum Distribution Setup for Rejected Documents</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>ProcessGetDocumentChecklistItemsAndVerification</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Allows flow user to resubmit documents that were previously rejected.</description>
            <name>ResubmitRejectedDocuments</name>
            <actionName>serviceprocess__WealthResbmtRejDoc</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>ReviewGetDocumentChecklistItemsAndVerification.Outputs.userName</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>caseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <label>Resubmit Rejected Documents</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Orchestrator</processType>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <sourceTemplate>serviceprocess__WealthSetupRMD</sourceTemplate>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>NotifyStakeholdersOfRequest</targetReference>
        </connector>
        <filterFormula>{!$Record.SvcCatalogItemDefinition.DeveloperName}=&apos;FSCWlth_SetupRequiredMinimumDistribution&apos;</filterFormula>
        <object>SvcCatalogRequest</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
