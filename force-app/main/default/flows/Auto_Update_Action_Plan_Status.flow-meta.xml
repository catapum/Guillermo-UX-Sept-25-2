<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Adds the Action Plan Item ID of the current record in the IterateOverActionPlanItems loop to the TaskIds collection.</description>
        <name>AddActionPlanItemIdToCollection</name>
        <label>Add Action Plan Item ID to Collection</label>
        <locationX>666</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>TaskIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverActionPlanItems.ItemId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverActionPlanItems</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Determines whether the status of the current task record is In Progress.</description>
        <name>IsTaskStatusInProgress</name>
        <label>Is Task Status In Progress?</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>GetActionPlanItems</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateActionPlanStatusInProgress</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines the status of all the task records in the Completed Tasks from GetCompletedTasks, Not Started Tasks from GetNotStartedTasks, and In Progress Tasks from GetInProgressTasks collection variables.</description>
        <name>WhichTaskStatus</name>
        <label>Which Task Status ?</label>
        <locationX>578</locationX>
        <locationY>1379</locationY>
        <defaultConnector>
            <targetReference>UpdateActionPlanStatusToInProgress2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Some Tasks In Progress</defaultConnectorLabel>
        <rules>
            <name>IsAllTasksCompleted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetNotStartedTasks</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetInProgressTasks</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Other_Tasks</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateActionPlanStatusCompleted</targetReference>
            </connector>
            <label>All Tasks Completed</label>
        </rules>
        <rules>
            <name>IsAllTasksNotStarted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetInProgressTasks</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCompletedTasks</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Other_Tasks</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateActionPlanStatusNotStarted</targetReference>
            </connector>
            <label>All Tasks Not Started</label>
        </rules>
    </decisions>
    <description>Automatically update the action plan status according to how the underlying tasks are marked</description>
    <environments>Default</environments>
    <interviewLabel>Auto Update Action Plan Status {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Auto Update Action Plan Status</label>
    <loops>
        <description>Repeats actions for each action plan item record in the Action Plan Items from GetActionPlanItems record collection.</description>
        <name>IterateOverActionPlanItems</name>
        <label>Iterate Over Action Plan Items</label>
        <locationX>578</locationX>
        <locationY>647</locationY>
        <collectionReference>GetActionPlanItems</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddActionPlanItemIdToCollection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetCompletedTasks</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the other status task records with an ID thatâ€™s in the TaskIds collection. Stores the ID of the results in the Other status Tasks from GetOtherTasks record collection.</description>
        <name>Get_Other_Tasks</name>
        <label>Get Other Tasks</label>
        <locationX>578</locationX>
        <locationY>1271</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>WhichTaskStatus</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>TaskIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the action plan item record with an Action Plan Item ID that matches the Activity ID of the record that triggered the flow. Stores the ID, Action Plan ID, Item Entity Type, and Action Plan Item ID of the result in the Action Plan Item from Get Action Plan Item record variable.</description>
        <name>GetActionPlanItem</name>
        <label>Get Action Plan Item</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsTaskStatusInProgress</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ItemId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ActionPlanItem</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>ActionPlanId</queriedFields>
        <queriedFields>ItemEntityType</queriedFields>
        <queriedFields>ItemId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the action plan item records with an Action Plan ID matching the Action Plan ID in Action Plan Item from GetActionPlanItem and Item Entity Type matching Task. Stores the ID and Action Plan Item ID of the results in the Action Plan Items from GetActionPlanItems record collection.</description>
        <name>GetActionPlanItems</name>
        <label>Get Action Plan Items</label>
        <locationX>578</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverActionPlanItems</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ActionPlanId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetActionPlanItem.ActionPlan.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ItemEntityType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Task</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ActionPlanItem</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>ItemId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the completed task records with an ID thatâ€™s in the TaskIds collection. Stores the ID of the results in the Completed Tasks from GetCompletedTasks record collection.</description>
        <name>GetCompletedTasks</name>
        <label>Get Completed Tasks</label>
        <locationX>578</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetNotStartedTasks</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>TaskIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the in progress task records with an ID thatâ€™s in the TaskIds collection. Stores the ID of the results in the In Progress Tasks from GetInProgressTasks record collection.</description>
        <name>GetInProgressTasks</name>
        <label>Get In Progress Tasks</label>
        <locationX>578</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Other_Tasks</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>TaskIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the task records that are not started and with an ID thatâ€™s in the TaskIds collection. Stores the ID of the results in the Not Started Tasks from GetNotStartedTasks record collection.</description>
        <name>GetNotStartedTasks</name>
        <label>Get Not Started Tasks</label>
        <locationX>578</locationX>
        <locationY>1055</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetInProgressTasks</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>TaskIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Updates the action plan record with an ID that matches the Action Plan ID in Action Plan Item from GetActionPlanItem, setting the status to Completed.</description>
        <name>UpdateActionPlanStatusCompleted</name>
        <label>Update Action Plan Status</label>
        <locationX>314</locationX>
        <locationY>1487</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetActionPlanItem.ActionPlan.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ActionPlanState</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>ActionPlan</object>
    </recordUpdates>
    <recordUpdates>
        <description>Updates the action plan record with an ID that matches the Action Plan ID in Action Plan Item from GetActionPlanItem, setting the status to In Progress.</description>
        <name>UpdateActionPlanStatusInProgress</name>
        <label>Update Action Plan Status</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetActionPlanItem.ActionPlan.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ActionPlanState</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <object>ActionPlan</object>
    </recordUpdates>
    <recordUpdates>
        <description>Updates the action plan record with an ID that matches the Action Plan ID in Action Plan Item from GetActionPlanItem, setting the status to NotStarted.</description>
        <name>UpdateActionPlanStatusNotStarted</name>
        <label>Update Action Plan Status</label>
        <locationX>578</locationX>
        <locationY>1487</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetActionPlanItem.ActionPlan.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ActionPlanState</field>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputAssignments>
        <object>ActionPlan</object>
    </recordUpdates>
    <recordUpdates>
        <description>Updates the action plan record with an ID that matches the Action Plan ID in Action Plan Item from GetActionPlanItem, setting the status to In Progress.</description>
        <name>UpdateActionPlanStatusToInProgress2</name>
        <label>Update Action Plan Status</label>
        <locationX>842</locationX>
        <locationY>1487</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetActionPlanItem.ActionPlan.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ActionPlanState</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <object>ActionPlan</object>
    </recordUpdates>
    <sourceTemplate>fsc_actionplan__UpdateActionPlanSts</sourceTemplate>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetActionPlanItem</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the IDs of the action plan item records to process.</description>
        <name>TaskIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
