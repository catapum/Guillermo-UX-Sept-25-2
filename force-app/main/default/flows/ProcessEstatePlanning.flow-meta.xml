<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <description>Determines whether isProcessServiceCatalogRequestFailed from the ProcessEstatePlanningRequestAndNotifyAccount step of the ProcessEstatePlanningRequestAndNotifyStakeholders stage is set to True.</description>
        <name>HasEstatePlanningRequestFailed</name>
        <label>Has Estate Planning Request Failed?</label>
        <locationX>248</locationX>
        <locationY>503</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsFailed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ProcessEstatePlanningRequestAndNotifyAccount.Outputs.isProcessServiceCatalogRequestFailed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NotifyCaseOwnerOfFailure</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if the &apos;isRetryConnection&apos; variable in the NotifyCaseOwnerOfFailedRequest is set to True, indicating that the user has chosen to retry the ProcessEstatePlanningRequestAndNotifyStakeholders stage.</description>
        <name>IsRetrySelected</name>
        <label>Is Retry Selected?</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>RetrySelected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotifyCaseOwnerOfFailedRequest.Outputs.isRetryConnection</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>ProcessEstatePlanningRequestAndNotifyStakeholders</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Notifies the account that an Estate Planning request was made and attempts to process it. If the attempt is successful, closes the associated case and notifies the account. If the attempt fails, notifies the case owner.</description>
    <environments>Default</environments>
    <interviewLabel>FSC Retail:Process Estate Planning Service Request {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Process Estate Planning</label>
    <orchestratedStages>
        <description>Notifies the Estate Planning that the reset PIN request failed.</description>
        <name>NotifyCaseOwnerOfFailure</name>
        <label>Notify Case Owner of Failure</label>
        <locationX>50</locationX>
        <locationY>611</locationY>
        <connector>
            <targetReference>IsRetrySelected</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Assigns a work item to the service catalog request record owner that displays a retry screen, notifying them that the Estate Planning request failed.</description>
            <name>NotifyCaseOwnerOfFailedRequest</name>
            <actionName>serviceprocess__AsyncApexCalloutSts</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>status</name>
                <value>
                    <elementReference>ProcessEstatePlanningRequestAndNotifyAccount.Outputs.failureMessage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__CustomEmailSubject</name>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__CustomEmailBody</name>
            </inputParameters>
            <label>Notify Case Owner of Failed Request</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Notifies the account associated with the triggering service catalog request that an Estate Planning request has been made for the account. If your process requires notifying other stakeholders, add additional steps to inform them at this stage.</description>
        <name>NotifyStakeholdersOfRequest</name>
        <label>Notify Stakeholders of Request</label>
        <locationX>248</locationX>
        <locationY>287</locationY>
        <connector>
            <targetReference>ProcessEstatePlanningRequestAndNotifyStakeholders</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Emails the person associated with the account of the triggering service catalog request record when an Estate Planning request has been made, provided the associated email can be determined.</description>
            <name>NotifyAccountOfEstatePlanningRequest</name>
            <actionName>serviceprocess__ReviewEstatePlanning</actionName>
            <actionType>stepBackground</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>inputRecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Notify Account of Estate Planning Request</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>true</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Attempts to process the Estate Planning request, close the case, and notify the account associated with the triggering service catalog request. If your process requires notifying other stakeholders about the success or status change of the case, add additional steps to notify them at this stage.</description>
        <name>ProcessEstatePlanningRequestAndNotifyStakeholders</name>
        <label>Process Estate Planning Request and Notify Stakeholders</label>
        <locationX>248</locationX>
        <locationY>395</locationY>
        <connector>
            <targetReference>HasEstatePlanningRequestFailed</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Processes the Estate Planning request and, if the request succeeds, closes the associated case. If an email is available and the case is closed, emails the customer to notify them that their request has been processed and the case is closed. If the Estate Planning request fails, returns True for isProcessServiceCatalogRequestFailed and an error message for failureMessage.</description>
            <name>ProcessEstatePlanningRequestAndNotifyAccount</name>
            <actionName>serviceprocess__UpdateCase</actionName>
            <actionType>stepBackground</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>accountEmail</name>
                <value>
                    <elementReference>NotifyAccountOfEstatePlanningRequest.Outputs.accountEmail</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>caseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>emailSubjectCaseClosed</name>
                <value>
                    <stringValue>Your estate planning request was closed</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>integrationDefinitionDevName</name>
                <value>
                    <stringValue>FSCRtl_EstatePlanning</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Process Estate Planning Request and Notify Account</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>true</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Orchestrator</processType>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <sourceTemplate>serviceprocess__ProcessEstatePlanning</sourceTemplate>
    <start>
        <locationX>122</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>NotifyStakeholdersOfRequest</targetReference>
        </connector>
        <filterFormula>{!$Record.SvcCatalogItemDefinition.DeveloperName}=&apos;FSCRtl_EstatePlanning&apos;</filterFormula>
        <object>SvcCatalogRequest</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
