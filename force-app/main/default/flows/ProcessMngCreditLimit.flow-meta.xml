<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <description>Determines whether isProcessServiceCatalogRequestFailed from the ProcessManageCreditLimitRequestAndNotifyAccount step of the ProcessManageCreditLimitRequestAndNotifyStakeholders stage is set to True.</description>
        <name>HasManageCreditLimitRequestFailed</name>
        <label>Has Manage Credit Limit Request Failed?</label>
        <locationX>336</locationX>
        <locationY>1169</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsFailed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>ProcessManageCreditLimitRequestAndNotifyAccount.Outputs.isProcessServiceCatalogRequestFailed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NotifyCaseOwnerOfFailure</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the flow user has uploaded any documents.</description>
        <name>IsDocumentUploaded</name>
        <label>Is Document Uploaded?</label>
        <locationX>336</locationX>
        <locationY>395</locationY>
        <defaultConnector>
            <targetReference>ProcessManageCreditLimitRequestAndNotifyStakeholders</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>DocumentUploaded</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotifyAccountOfManageCreditLimitRequest.Outputs.documentAttached</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ProcessDocumentChecklistItems</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if the &apos;isRetryConnection&apos; variable in the NotifyCaseOwnerOfFailedRequest is set to True, indicating that the user has chosen to retry the ProcessManageCreditLimitRequestAndNotifyStakeholders stage.</description>
        <name>IsRetrySelected</name>
        <label>Is Retry Selected?</label>
        <locationX>138</locationX>
        <locationY>1385</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>RetrySelected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotifyCaseOwnerOfFailedRequest.Outputs.isRetryConnection</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>ProcessManageCreditLimitRequestAndNotifyStakeholders</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the document was rejected by the agent.</description>
        <name>WasDocumentRejected</name>
        <label>Was Document Rejected?</label>
        <locationX>182</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>ProcessManageCreditLimitRequestAndNotifyStakeholders</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>DocumentRejected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ReviewDocumentChecklistItems.Outputs.rejectedDocumentStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ProcessManageCreditLimitRequestAndDocumentResubmissionActions</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Notifies the account that a manage credit limit request was made and attempts to process it. If the attempt is successful, closes the associated case and notifies the account. If the attempt fails, notifies the case owner. Also, reviews the status of documents uploaded by the account owner and determines if a work item should be created for the account owner to re-upload any rejected documents.</description>
    <environments>Default</environments>
    <interviewLabel>FSC Wealth: Process Manage Credit Limit Requests {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Process Manage Credit Limit</label>
    <orchestratedStages>
        <description>Notifies the case owner that the manage credit limit request failed.</description>
        <name>NotifyCaseOwnerOfFailure</name>
        <label>Notify Case Owner of Failure</label>
        <locationX>138</locationX>
        <locationY>1277</locationY>
        <connector>
            <targetReference>IsRetrySelected</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Assigns a work item to the service catalog request record owner that displays a retry screen, notifying them that the manage credit limit request failed.</description>
            <name>NotifyCaseOwnerOfFailedRequest</name>
            <actionName>serviceprocess__AsyncApexCalloutSts</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>status</name>
                <value>
                    <elementReference>ProcessManageCreditLimitRequestAndNotifyAccount.Outputs.failureMessage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <label>Notify Case Owner of Failed Request</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Notifies the account associated with the triggering service catalog request that a Manage Credit Limit request has been made for the account. If your process requires notifying other stakeholders, add additional steps to inform them in this stage.</description>
        <name>NotifyStakeholdersOfRequest</name>
        <label>Notify Stakeholders of Request</label>
        <locationX>336</locationX>
        <locationY>287</locationY>
        <connector>
            <targetReference>IsDocumentUploaded</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Emails the person associated with the account of the triggering service catalog request record when a Manage Credit Limit request has been made, provided the associated email can be determined.</description>
            <name>NotifyAccountOfManageCreditLimitRequest</name>
            <actionName>serviceprocess__ManageCreditLimit</actionName>
            <actionType>stepBackground</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>inputRecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Notify Account of Manage Credit Limit Request</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>true</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Reviews all the uploaded Document Checklist Item records with a status of &quot;New&quot;.</description>
        <name>ProcessDocumentChecklistItems</name>
        <label>Process Document Checklist Items</label>
        <locationX>182</locationX>
        <locationY>503</locationY>
        <connector>
            <targetReference>WasDocumentRejected</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Gets and reviews all uploaded Document Checklist Item records with a status of &apos;New,&apos; passing them to the subsequent flows, and displays the uploaded documents on the screen for the agent&apos;s review.</description>
            <name>ReviewDocumentChecklistItems</name>
            <actionName>serviceprocess__ReviewDocumentStatus</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>accountId</name>
                <value>
                    <elementReference>$Record.Case.Account.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>caseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <label>Review Document Checklist Items</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Manages the credit limit request when documents are rejected and allows the customer to resubmit the rejected documents via the self-service portal. Attempts to process the credit limit request based on the uploaded documents and provides the customer with the option to resubmit any rejected documents through the portal.</description>
        <name>ProcessManageCreditLimitRequestAndDocumentResubmissionActions</name>
        <label>Process Manage Credit Limit Request and Document Resubmission Actions</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>ProcessDocumentChecklistItems</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Allows the account owner to resubmit documents that were previously rejected.</description>
            <name>ResubmitRejectedDocuments</name>
            <actionName>serviceprocess__WealthResbmtRejDoc</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>ReviewDocumentChecklistItems.Outputs.userName</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>caseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <label>Resubmit Rejected Documents</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Attempts to process the Manage Credit Limit request, close the case, and notify the account associated with the triggering service catalog request. If your process requires that you notify other stakeholders about the success or case change in status, add more steps to notify them in this stage.</description>
        <name>ProcessManageCreditLimitRequestAndNotifyStakeholders</name>
        <label>Process Manage Credit Limit Request and Notify Stakeholders</label>
        <locationX>336</locationX>
        <locationY>1061</locationY>
        <connector>
            <targetReference>HasManageCreditLimitRequestFailed</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Processes the Manage Credit Limit request and, if the request succeeds, closes the associated case. If an email is available and the case is closed, emails the account owner to notify them that their request was processed and the case is closed. If the Manage Credit Limit request fails, returns True for isProcessServiceCatalogRequestFailed and an error message for failureMessage.</description>
            <name>ProcessManageCreditLimitRequestAndNotifyAccount</name>
            <actionName>serviceprocess__UpdateCase</actionName>
            <actionType>stepBackground</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>accountEmail</name>
                <value>
                    <elementReference>NotifyAccountOfManageCreditLimitRequest.Outputs.accountEmail</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>caseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>emailSubjectCaseClosed</name>
                <value>
                    <stringValue>Your service request to manage credit limit was closed</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>integrationDefinitionDevName</name>
                <value>
                    <stringValue>FSCRtl_ManageCreditLimit</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Process Manage Credit Limit Request and Notify Account</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>true</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Orchestrator</processType>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <sourceTemplate>serviceprocess__ProcessMngCreditLimit</sourceTemplate>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>NotifyStakeholdersOfRequest</targetReference>
        </connector>
        <filterFormula>{!$Record.SvcCatalogItemDefinition.DeveloperName}=&apos;FSCRtl_ManageCreditLimit&apos;</filterFormula>
        <object>SvcCatalogRequest</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
